Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LPAREN
    RPAREN

Grammar

Rule 0     S' -> s
Rule 1     s -> segment
Rule 2     s -> segment s
Rule 3     segment -> conditional
Rule 4     segment -> statement
Rule 5     statement -> BOOLEAN NAME is_assign
Rule 6     statement -> STRING NAME is_assign
Rule 7     statement -> INTDEC NAME is_assign
Rule 8     statement -> FLOATDEC NAME is_assign
Rule 9     is_assign -> = expression
Rule 10    is_assign -> <empty>
Rule 11    statement -> PRINT ( expression )
Rule 12    statement -> NAME = expression
Rule 13    expression -> expression + expression
Rule 14    expression -> expression - expression
Rule 15    expression -> expression * expression
Rule 16    expression -> expression / expression
Rule 17    expression -> expression ^ expression
Rule 18    expression -> expression LT expression
Rule 19    expression -> expression GT expression
Rule 20    expression -> expression EQUAL expression
Rule 21    expression -> expression NOTEQUAL expression
Rule 22    expression -> expression GOEQUAL expression
Rule 23    expression -> expression LOEQUAL expression
Rule 24    expression -> expression AND expression
Rule 25    expression -> expression OR expression
Rule 26    logic_expression -> expression LT expression
Rule 27    logic_expression -> expression GT expression
Rule 28    logic_expression -> expression EQUAL expression
Rule 29    logic_expression -> expression NOTEQUAL expression
Rule 30    logic_expression -> expression GOEQUAL expression
Rule 31    logic_expression -> expression LOEQUAL expression
Rule 32    logic_expression -> expression AND expression
Rule 33    logic_expression -> expression OR expression
Rule 34    expression -> - expression
Rule 35    expression -> ( expression )
Rule 36    expression -> INUMBER
Rule 37    expression -> FNUMBER
Rule 38    expression -> BOOLEAN
Rule 39    expression -> STRING
Rule 40    expression -> NAME
Rule 41    conditional -> IF ( logic_expression ) { s } elif else
Rule 42    elif -> ELIF ( logic_expression ) { s } else
Rule 43    elif -> <empty>
Rule 44    else -> ELSE { s }
Rule 45    else -> <empty>

Terminals, with rules where they appear

(                    : 11 35 41 42
)                    : 11 35 41 42
*                    : 15
+                    : 13
-                    : 14 34
/                    : 16
=                    : 9 12
AND                  : 24 32
BOOLEAN              : 5 38
ELIF                 : 42
ELSE                 : 44
EQUAL                : 20 28
FLOATDEC             : 8
FNUMBER              : 37
GOEQUAL              : 22 30
GT                   : 19 27
IF                   : 41
INTDEC               : 7
INUMBER              : 36
LOEQUAL              : 23 31
LPAREN               : 
LT                   : 18 26
NAME                 : 5 6 7 8 12 40
NOTEQUAL             : 21 29
OR                   : 25 33
PRINT                : 11
RPAREN               : 
STRING               : 6 39
^                    : 17
error                : 
{                    : 41 42 44
}                    : 41 42 44

Nonterminals, with rules where they appear

conditional          : 3
elif                 : 41
else                 : 41 42
expression           : 9 11 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35
is_assign            : 5 6 7 8
logic_expression     : 41 42
s                    : 2 41 42 44 0
segment              : 1 2
statement            : 4

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . segment
    (2) s -> . segment s
    (3) segment -> . conditional
    (4) segment -> . statement
    (41) conditional -> . IF ( logic_expression ) { s } elif else
    (5) statement -> . BOOLEAN NAME is_assign
    (6) statement -> . STRING NAME is_assign
    (7) statement -> . INTDEC NAME is_assign
    (8) statement -> . FLOATDEC NAME is_assign
    (11) statement -> . PRINT ( expression )
    (12) statement -> . NAME = expression

    IF              shift and go to state 5
    BOOLEAN         shift and go to state 6
    STRING          shift and go to state 8
    INTDEC          shift and go to state 9
    FLOATDEC        shift and go to state 10
    PRINT           shift and go to state 11
    NAME            shift and go to state 7

    s                              shift and go to state 1
    segment                        shift and go to state 2
    conditional                    shift and go to state 3
    statement                      shift and go to state 4

state 1

    (0) S' -> s .



state 2

    (1) s -> segment .
    (2) s -> segment . s
    (1) s -> . segment
    (2) s -> . segment s
    (3) segment -> . conditional
    (4) segment -> . statement
    (41) conditional -> . IF ( logic_expression ) { s } elif else
    (5) statement -> . BOOLEAN NAME is_assign
    (6) statement -> . STRING NAME is_assign
    (7) statement -> . INTDEC NAME is_assign
    (8) statement -> . FLOATDEC NAME is_assign
    (11) statement -> . PRINT ( expression )
    (12) statement -> . NAME = expression

    $end            reduce using rule 1 (s -> segment .)
    }               reduce using rule 1 (s -> segment .)
    IF              shift and go to state 5
    BOOLEAN         shift and go to state 6
    STRING          shift and go to state 8
    INTDEC          shift and go to state 9
    FLOATDEC        shift and go to state 10
    PRINT           shift and go to state 11
    NAME            shift and go to state 7

    segment                        shift and go to state 2
    s                              shift and go to state 12
    conditional                    shift and go to state 3
    statement                      shift and go to state 4

state 3

    (3) segment -> conditional .

    IF              reduce using rule 3 (segment -> conditional .)
    BOOLEAN         reduce using rule 3 (segment -> conditional .)
    STRING          reduce using rule 3 (segment -> conditional .)
    INTDEC          reduce using rule 3 (segment -> conditional .)
    FLOATDEC        reduce using rule 3 (segment -> conditional .)
    PRINT           reduce using rule 3 (segment -> conditional .)
    NAME            reduce using rule 3 (segment -> conditional .)
    $end            reduce using rule 3 (segment -> conditional .)
    }               reduce using rule 3 (segment -> conditional .)


state 4

    (4) segment -> statement .

    IF              reduce using rule 4 (segment -> statement .)
    BOOLEAN         reduce using rule 4 (segment -> statement .)
    STRING          reduce using rule 4 (segment -> statement .)
    INTDEC          reduce using rule 4 (segment -> statement .)
    FLOATDEC        reduce using rule 4 (segment -> statement .)
    PRINT           reduce using rule 4 (segment -> statement .)
    NAME            reduce using rule 4 (segment -> statement .)
    $end            reduce using rule 4 (segment -> statement .)
    }               reduce using rule 4 (segment -> statement .)


state 5

    (41) conditional -> IF . ( logic_expression ) { s } elif else

    (               shift and go to state 13


state 6

    (5) statement -> BOOLEAN . NAME is_assign

    NAME            shift and go to state 14


state 7

    (12) statement -> NAME . = expression

    =               shift and go to state 15


state 8

    (6) statement -> STRING . NAME is_assign

    NAME            shift and go to state 16


state 9

    (7) statement -> INTDEC . NAME is_assign

    NAME            shift and go to state 17


state 10

    (8) statement -> FLOATDEC . NAME is_assign

    NAME            shift and go to state 18


state 11

    (11) statement -> PRINT . ( expression )

    (               shift and go to state 19


state 12

    (2) s -> segment s .

    $end            reduce using rule 2 (s -> segment s .)
    }               reduce using rule 2 (s -> segment s .)


state 13

    (41) conditional -> IF ( . logic_expression ) { s } elif else
    (26) logic_expression -> . expression LT expression
    (27) logic_expression -> . expression GT expression
    (28) logic_expression -> . expression EQUAL expression
    (29) logic_expression -> . expression NOTEQUAL expression
    (30) logic_expression -> . expression GOEQUAL expression
    (31) logic_expression -> . expression LOEQUAL expression
    (32) logic_expression -> . expression AND expression
    (33) logic_expression -> . expression OR expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    logic_expression               shift and go to state 21
    expression                     shift and go to state 22

state 14

    (5) statement -> BOOLEAN NAME . is_assign
    (9) is_assign -> . = expression
    (10) is_assign -> .

    =               shift and go to state 30
    IF              reduce using rule 10 (is_assign -> .)
    BOOLEAN         reduce using rule 10 (is_assign -> .)
    STRING          reduce using rule 10 (is_assign -> .)
    INTDEC          reduce using rule 10 (is_assign -> .)
    FLOATDEC        reduce using rule 10 (is_assign -> .)
    PRINT           reduce using rule 10 (is_assign -> .)
    NAME            reduce using rule 10 (is_assign -> .)
    $end            reduce using rule 10 (is_assign -> .)
    }               reduce using rule 10 (is_assign -> .)

    is_assign                      shift and go to state 29

state 15

    (12) statement -> NAME = . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 31

state 16

    (6) statement -> STRING NAME . is_assign
    (9) is_assign -> . = expression
    (10) is_assign -> .

    =               shift and go to state 30
    IF              reduce using rule 10 (is_assign -> .)
    BOOLEAN         reduce using rule 10 (is_assign -> .)
    STRING          reduce using rule 10 (is_assign -> .)
    INTDEC          reduce using rule 10 (is_assign -> .)
    FLOATDEC        reduce using rule 10 (is_assign -> .)
    PRINT           reduce using rule 10 (is_assign -> .)
    NAME            reduce using rule 10 (is_assign -> .)
    $end            reduce using rule 10 (is_assign -> .)
    }               reduce using rule 10 (is_assign -> .)

    is_assign                      shift and go to state 32

state 17

    (7) statement -> INTDEC NAME . is_assign
    (9) is_assign -> . = expression
    (10) is_assign -> .

    =               shift and go to state 30
    IF              reduce using rule 10 (is_assign -> .)
    BOOLEAN         reduce using rule 10 (is_assign -> .)
    STRING          reduce using rule 10 (is_assign -> .)
    INTDEC          reduce using rule 10 (is_assign -> .)
    FLOATDEC        reduce using rule 10 (is_assign -> .)
    PRINT           reduce using rule 10 (is_assign -> .)
    NAME            reduce using rule 10 (is_assign -> .)
    $end            reduce using rule 10 (is_assign -> .)
    }               reduce using rule 10 (is_assign -> .)

    is_assign                      shift and go to state 33

state 18

    (8) statement -> FLOATDEC NAME . is_assign
    (9) is_assign -> . = expression
    (10) is_assign -> .

    =               shift and go to state 30
    IF              reduce using rule 10 (is_assign -> .)
    BOOLEAN         reduce using rule 10 (is_assign -> .)
    STRING          reduce using rule 10 (is_assign -> .)
    INTDEC          reduce using rule 10 (is_assign -> .)
    FLOATDEC        reduce using rule 10 (is_assign -> .)
    PRINT           reduce using rule 10 (is_assign -> .)
    NAME            reduce using rule 10 (is_assign -> .)
    $end            reduce using rule 10 (is_assign -> .)
    }               reduce using rule 10 (is_assign -> .)

    is_assign                      shift and go to state 34

state 19

    (11) statement -> PRINT ( . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 35

state 20

    (35) expression -> ( . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 36

state 21

    (41) conditional -> IF ( logic_expression . ) { s } elif else

    )               shift and go to state 37


state 22

    (26) logic_expression -> expression . LT expression
    (27) logic_expression -> expression . GT expression
    (28) logic_expression -> expression . EQUAL expression
    (29) logic_expression -> expression . NOTEQUAL expression
    (30) logic_expression -> expression . GOEQUAL expression
    (31) logic_expression -> expression . LOEQUAL expression
    (32) logic_expression -> expression . AND expression
    (33) logic_expression -> expression . OR expression
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    LT              shift and go to state 38
    GT              shift and go to state 39
    EQUAL           shift and go to state 40
    NOTEQUAL        shift and go to state 41
    GOEQUAL         shift and go to state 42
    LOEQUAL         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50


state 23

    (34) expression -> - . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 51

state 24

    (36) expression -> INUMBER .

    LT              reduce using rule 36 (expression -> INUMBER .)
    GT              reduce using rule 36 (expression -> INUMBER .)
    EQUAL           reduce using rule 36 (expression -> INUMBER .)
    NOTEQUAL        reduce using rule 36 (expression -> INUMBER .)
    GOEQUAL         reduce using rule 36 (expression -> INUMBER .)
    LOEQUAL         reduce using rule 36 (expression -> INUMBER .)
    AND             reduce using rule 36 (expression -> INUMBER .)
    OR              reduce using rule 36 (expression -> INUMBER .)
    +               reduce using rule 36 (expression -> INUMBER .)
    -               reduce using rule 36 (expression -> INUMBER .)
    *               reduce using rule 36 (expression -> INUMBER .)
    /               reduce using rule 36 (expression -> INUMBER .)
    ^               reduce using rule 36 (expression -> INUMBER .)
    IF              reduce using rule 36 (expression -> INUMBER .)
    BOOLEAN         reduce using rule 36 (expression -> INUMBER .)
    STRING          reduce using rule 36 (expression -> INUMBER .)
    INTDEC          reduce using rule 36 (expression -> INUMBER .)
    FLOATDEC        reduce using rule 36 (expression -> INUMBER .)
    PRINT           reduce using rule 36 (expression -> INUMBER .)
    NAME            reduce using rule 36 (expression -> INUMBER .)
    $end            reduce using rule 36 (expression -> INUMBER .)
    }               reduce using rule 36 (expression -> INUMBER .)
    )               reduce using rule 36 (expression -> INUMBER .)


state 25

    (37) expression -> FNUMBER .

    LT              reduce using rule 37 (expression -> FNUMBER .)
    GT              reduce using rule 37 (expression -> FNUMBER .)
    EQUAL           reduce using rule 37 (expression -> FNUMBER .)
    NOTEQUAL        reduce using rule 37 (expression -> FNUMBER .)
    GOEQUAL         reduce using rule 37 (expression -> FNUMBER .)
    LOEQUAL         reduce using rule 37 (expression -> FNUMBER .)
    AND             reduce using rule 37 (expression -> FNUMBER .)
    OR              reduce using rule 37 (expression -> FNUMBER .)
    +               reduce using rule 37 (expression -> FNUMBER .)
    -               reduce using rule 37 (expression -> FNUMBER .)
    *               reduce using rule 37 (expression -> FNUMBER .)
    /               reduce using rule 37 (expression -> FNUMBER .)
    ^               reduce using rule 37 (expression -> FNUMBER .)
    IF              reduce using rule 37 (expression -> FNUMBER .)
    BOOLEAN         reduce using rule 37 (expression -> FNUMBER .)
    STRING          reduce using rule 37 (expression -> FNUMBER .)
    INTDEC          reduce using rule 37 (expression -> FNUMBER .)
    FLOATDEC        reduce using rule 37 (expression -> FNUMBER .)
    PRINT           reduce using rule 37 (expression -> FNUMBER .)
    NAME            reduce using rule 37 (expression -> FNUMBER .)
    $end            reduce using rule 37 (expression -> FNUMBER .)
    }               reduce using rule 37 (expression -> FNUMBER .)
    )               reduce using rule 37 (expression -> FNUMBER .)


state 26

    (38) expression -> BOOLEAN .

    LT              reduce using rule 38 (expression -> BOOLEAN .)
    GT              reduce using rule 38 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 38 (expression -> BOOLEAN .)
    NOTEQUAL        reduce using rule 38 (expression -> BOOLEAN .)
    GOEQUAL         reduce using rule 38 (expression -> BOOLEAN .)
    LOEQUAL         reduce using rule 38 (expression -> BOOLEAN .)
    AND             reduce using rule 38 (expression -> BOOLEAN .)
    OR              reduce using rule 38 (expression -> BOOLEAN .)
    +               reduce using rule 38 (expression -> BOOLEAN .)
    -               reduce using rule 38 (expression -> BOOLEAN .)
    *               reduce using rule 38 (expression -> BOOLEAN .)
    /               reduce using rule 38 (expression -> BOOLEAN .)
    ^               reduce using rule 38 (expression -> BOOLEAN .)
    IF              reduce using rule 38 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 38 (expression -> BOOLEAN .)
    STRING          reduce using rule 38 (expression -> BOOLEAN .)
    INTDEC          reduce using rule 38 (expression -> BOOLEAN .)
    FLOATDEC        reduce using rule 38 (expression -> BOOLEAN .)
    PRINT           reduce using rule 38 (expression -> BOOLEAN .)
    NAME            reduce using rule 38 (expression -> BOOLEAN .)
    $end            reduce using rule 38 (expression -> BOOLEAN .)
    }               reduce using rule 38 (expression -> BOOLEAN .)
    )               reduce using rule 38 (expression -> BOOLEAN .)


state 27

    (39) expression -> STRING .

    LT              reduce using rule 39 (expression -> STRING .)
    GT              reduce using rule 39 (expression -> STRING .)
    EQUAL           reduce using rule 39 (expression -> STRING .)
    NOTEQUAL        reduce using rule 39 (expression -> STRING .)
    GOEQUAL         reduce using rule 39 (expression -> STRING .)
    LOEQUAL         reduce using rule 39 (expression -> STRING .)
    AND             reduce using rule 39 (expression -> STRING .)
    OR              reduce using rule 39 (expression -> STRING .)
    +               reduce using rule 39 (expression -> STRING .)
    -               reduce using rule 39 (expression -> STRING .)
    *               reduce using rule 39 (expression -> STRING .)
    /               reduce using rule 39 (expression -> STRING .)
    ^               reduce using rule 39 (expression -> STRING .)
    IF              reduce using rule 39 (expression -> STRING .)
    BOOLEAN         reduce using rule 39 (expression -> STRING .)
    STRING          reduce using rule 39 (expression -> STRING .)
    INTDEC          reduce using rule 39 (expression -> STRING .)
    FLOATDEC        reduce using rule 39 (expression -> STRING .)
    PRINT           reduce using rule 39 (expression -> STRING .)
    NAME            reduce using rule 39 (expression -> STRING .)
    $end            reduce using rule 39 (expression -> STRING .)
    }               reduce using rule 39 (expression -> STRING .)
    )               reduce using rule 39 (expression -> STRING .)


state 28

    (40) expression -> NAME .

    LT              reduce using rule 40 (expression -> NAME .)
    GT              reduce using rule 40 (expression -> NAME .)
    EQUAL           reduce using rule 40 (expression -> NAME .)
    NOTEQUAL        reduce using rule 40 (expression -> NAME .)
    GOEQUAL         reduce using rule 40 (expression -> NAME .)
    LOEQUAL         reduce using rule 40 (expression -> NAME .)
    AND             reduce using rule 40 (expression -> NAME .)
    OR              reduce using rule 40 (expression -> NAME .)
    +               reduce using rule 40 (expression -> NAME .)
    -               reduce using rule 40 (expression -> NAME .)
    *               reduce using rule 40 (expression -> NAME .)
    /               reduce using rule 40 (expression -> NAME .)
    ^               reduce using rule 40 (expression -> NAME .)
    IF              reduce using rule 40 (expression -> NAME .)
    BOOLEAN         reduce using rule 40 (expression -> NAME .)
    STRING          reduce using rule 40 (expression -> NAME .)
    INTDEC          reduce using rule 40 (expression -> NAME .)
    FLOATDEC        reduce using rule 40 (expression -> NAME .)
    PRINT           reduce using rule 40 (expression -> NAME .)
    NAME            reduce using rule 40 (expression -> NAME .)
    $end            reduce using rule 40 (expression -> NAME .)
    }               reduce using rule 40 (expression -> NAME .)
    )               reduce using rule 40 (expression -> NAME .)


state 29

    (5) statement -> BOOLEAN NAME is_assign .

    IF              reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    BOOLEAN         reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    STRING          reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    INTDEC          reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    FLOATDEC        reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    PRINT           reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    NAME            reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    $end            reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)
    }               reduce using rule 5 (statement -> BOOLEAN NAME is_assign .)


state 30

    (9) is_assign -> = . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 52

state 31

    (12) statement -> NAME = expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    IF              reduce using rule 12 (statement -> NAME = expression .)
    BOOLEAN         reduce using rule 12 (statement -> NAME = expression .)
    STRING          reduce using rule 12 (statement -> NAME = expression .)
    INTDEC          reduce using rule 12 (statement -> NAME = expression .)
    FLOATDEC        reduce using rule 12 (statement -> NAME = expression .)
    PRINT           reduce using rule 12 (statement -> NAME = expression .)
    NAME            reduce using rule 12 (statement -> NAME = expression .)
    $end            reduce using rule 12 (statement -> NAME = expression .)
    }               reduce using rule 12 (statement -> NAME = expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60


state 32

    (6) statement -> STRING NAME is_assign .

    IF              reduce using rule 6 (statement -> STRING NAME is_assign .)
    BOOLEAN         reduce using rule 6 (statement -> STRING NAME is_assign .)
    STRING          reduce using rule 6 (statement -> STRING NAME is_assign .)
    INTDEC          reduce using rule 6 (statement -> STRING NAME is_assign .)
    FLOATDEC        reduce using rule 6 (statement -> STRING NAME is_assign .)
    PRINT           reduce using rule 6 (statement -> STRING NAME is_assign .)
    NAME            reduce using rule 6 (statement -> STRING NAME is_assign .)
    $end            reduce using rule 6 (statement -> STRING NAME is_assign .)
    }               reduce using rule 6 (statement -> STRING NAME is_assign .)


state 33

    (7) statement -> INTDEC NAME is_assign .

    IF              reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    BOOLEAN         reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    STRING          reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    INTDEC          reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    FLOATDEC        reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    PRINT           reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    NAME            reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    $end            reduce using rule 7 (statement -> INTDEC NAME is_assign .)
    }               reduce using rule 7 (statement -> INTDEC NAME is_assign .)


state 34

    (8) statement -> FLOATDEC NAME is_assign .

    IF              reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    BOOLEAN         reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    STRING          reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    INTDEC          reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    FLOATDEC        reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    PRINT           reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    NAME            reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    $end            reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)
    }               reduce using rule 8 (statement -> FLOATDEC NAME is_assign .)


state 35

    (11) statement -> PRINT ( expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    )               shift and go to state 61
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60


state 36

    (35) expression -> ( expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    )               shift and go to state 62
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60


state 37

    (41) conditional -> IF ( logic_expression ) . { s } elif else

    {               shift and go to state 63


state 38

    (26) logic_expression -> expression LT . expression
    (18) expression -> expression LT . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 64

state 39

    (27) logic_expression -> expression GT . expression
    (19) expression -> expression GT . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 65

state 40

    (28) logic_expression -> expression EQUAL . expression
    (20) expression -> expression EQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 66

state 41

    (29) logic_expression -> expression NOTEQUAL . expression
    (21) expression -> expression NOTEQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 67

state 42

    (30) logic_expression -> expression GOEQUAL . expression
    (22) expression -> expression GOEQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 68

state 43

    (31) logic_expression -> expression LOEQUAL . expression
    (23) expression -> expression LOEQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 69

state 44

    (32) logic_expression -> expression AND . expression
    (24) expression -> expression AND . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 70

state 45

    (33) logic_expression -> expression OR . expression
    (25) expression -> expression OR . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 71

state 46

    (13) expression -> expression + . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 72

state 47

    (14) expression -> expression - . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 73

state 48

    (15) expression -> expression * . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 74

state 49

    (16) expression -> expression / . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 75

state 50

    (17) expression -> expression ^ . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 76

state 51

    (34) expression -> - expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    LT              reduce using rule 34 (expression -> - expression .)
    GT              reduce using rule 34 (expression -> - expression .)
    EQUAL           reduce using rule 34 (expression -> - expression .)
    NOTEQUAL        reduce using rule 34 (expression -> - expression .)
    GOEQUAL         reduce using rule 34 (expression -> - expression .)
    LOEQUAL         reduce using rule 34 (expression -> - expression .)
    AND             reduce using rule 34 (expression -> - expression .)
    OR              reduce using rule 34 (expression -> - expression .)
    +               reduce using rule 34 (expression -> - expression .)
    -               reduce using rule 34 (expression -> - expression .)
    *               reduce using rule 34 (expression -> - expression .)
    /               reduce using rule 34 (expression -> - expression .)
    ^               reduce using rule 34 (expression -> - expression .)
    IF              reduce using rule 34 (expression -> - expression .)
    BOOLEAN         reduce using rule 34 (expression -> - expression .)
    STRING          reduce using rule 34 (expression -> - expression .)
    INTDEC          reduce using rule 34 (expression -> - expression .)
    FLOATDEC        reduce using rule 34 (expression -> - expression .)
    PRINT           reduce using rule 34 (expression -> - expression .)
    NAME            reduce using rule 34 (expression -> - expression .)
    $end            reduce using rule 34 (expression -> - expression .)
    }               reduce using rule 34 (expression -> - expression .)
    )               reduce using rule 34 (expression -> - expression .)

  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! ^               [ shift and go to state 50 ]
  ! LT              [ shift and go to state 53 ]
  ! GT              [ shift and go to state 54 ]
  ! EQUAL           [ shift and go to state 55 ]
  ! NOTEQUAL        [ shift and go to state 56 ]
  ! GOEQUAL         [ shift and go to state 57 ]
  ! LOEQUAL         [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 60 ]


state 52

    (9) is_assign -> = expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    IF              reduce using rule 9 (is_assign -> = expression .)
    BOOLEAN         reduce using rule 9 (is_assign -> = expression .)
    STRING          reduce using rule 9 (is_assign -> = expression .)
    INTDEC          reduce using rule 9 (is_assign -> = expression .)
    FLOATDEC        reduce using rule 9 (is_assign -> = expression .)
    PRINT           reduce using rule 9 (is_assign -> = expression .)
    NAME            reduce using rule 9 (is_assign -> = expression .)
    $end            reduce using rule 9 (is_assign -> = expression .)
    }               reduce using rule 9 (is_assign -> = expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60


state 53

    (18) expression -> expression LT . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 77

state 54

    (19) expression -> expression GT . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 78

state 55

    (20) expression -> expression EQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 79

state 56

    (21) expression -> expression NOTEQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 80

state 57

    (22) expression -> expression GOEQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 81

state 58

    (23) expression -> expression LOEQUAL . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 82

state 59

    (24) expression -> expression AND . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 83

state 60

    (25) expression -> expression OR . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 84

state 61

    (11) statement -> PRINT ( expression ) .

    IF              reduce using rule 11 (statement -> PRINT ( expression ) .)
    BOOLEAN         reduce using rule 11 (statement -> PRINT ( expression ) .)
    STRING          reduce using rule 11 (statement -> PRINT ( expression ) .)
    INTDEC          reduce using rule 11 (statement -> PRINT ( expression ) .)
    FLOATDEC        reduce using rule 11 (statement -> PRINT ( expression ) .)
    PRINT           reduce using rule 11 (statement -> PRINT ( expression ) .)
    NAME            reduce using rule 11 (statement -> PRINT ( expression ) .)
    $end            reduce using rule 11 (statement -> PRINT ( expression ) .)
    }               reduce using rule 11 (statement -> PRINT ( expression ) .)


state 62

    (35) expression -> ( expression ) .

    LT              reduce using rule 35 (expression -> ( expression ) .)
    GT              reduce using rule 35 (expression -> ( expression ) .)
    EQUAL           reduce using rule 35 (expression -> ( expression ) .)
    NOTEQUAL        reduce using rule 35 (expression -> ( expression ) .)
    GOEQUAL         reduce using rule 35 (expression -> ( expression ) .)
    LOEQUAL         reduce using rule 35 (expression -> ( expression ) .)
    AND             reduce using rule 35 (expression -> ( expression ) .)
    OR              reduce using rule 35 (expression -> ( expression ) .)
    +               reduce using rule 35 (expression -> ( expression ) .)
    -               reduce using rule 35 (expression -> ( expression ) .)
    *               reduce using rule 35 (expression -> ( expression ) .)
    /               reduce using rule 35 (expression -> ( expression ) .)
    ^               reduce using rule 35 (expression -> ( expression ) .)
    IF              reduce using rule 35 (expression -> ( expression ) .)
    BOOLEAN         reduce using rule 35 (expression -> ( expression ) .)
    STRING          reduce using rule 35 (expression -> ( expression ) .)
    INTDEC          reduce using rule 35 (expression -> ( expression ) .)
    FLOATDEC        reduce using rule 35 (expression -> ( expression ) .)
    PRINT           reduce using rule 35 (expression -> ( expression ) .)
    NAME            reduce using rule 35 (expression -> ( expression ) .)
    $end            reduce using rule 35 (expression -> ( expression ) .)
    }               reduce using rule 35 (expression -> ( expression ) .)
    )               reduce using rule 35 (expression -> ( expression ) .)


state 63

    (41) conditional -> IF ( logic_expression ) { . s } elif else
    (1) s -> . segment
    (2) s -> . segment s
    (3) segment -> . conditional
    (4) segment -> . statement
    (41) conditional -> . IF ( logic_expression ) { s } elif else
    (5) statement -> . BOOLEAN NAME is_assign
    (6) statement -> . STRING NAME is_assign
    (7) statement -> . INTDEC NAME is_assign
    (8) statement -> . FLOATDEC NAME is_assign
    (11) statement -> . PRINT ( expression )
    (12) statement -> . NAME = expression

    IF              shift and go to state 5
    BOOLEAN         shift and go to state 6
    STRING          shift and go to state 8
    INTDEC          shift and go to state 9
    FLOATDEC        shift and go to state 10
    PRINT           shift and go to state 11
    NAME            shift and go to state 7

    s                              shift and go to state 85
    segment                        shift and go to state 2
    conditional                    shift and go to state 3
    statement                      shift and go to state 4

state 64

    (26) logic_expression -> expression LT expression .
    (18) expression -> expression LT expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 26 (logic_expression -> expression LT expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! EQUAL           [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! NOTEQUAL        [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! GOEQUAL         [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! LOEQUAL         [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! +               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! ^               [ reduce using rule 18 (expression -> expression LT expression .) ]


state 65

    (27) logic_expression -> expression GT expression .
    (19) expression -> expression GT expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 27 (logic_expression -> expression GT expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! EQUAL           [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! NOTEQUAL        [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! GOEQUAL         [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! LOEQUAL         [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! +               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! ^               [ reduce using rule 19 (expression -> expression GT expression .) ]


state 66

    (28) logic_expression -> expression EQUAL expression .
    (20) expression -> expression EQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 28 (logic_expression -> expression EQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! +               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! -               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! *               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! /               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! ^               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]


state 67

    (29) logic_expression -> expression NOTEQUAL expression .
    (21) expression -> expression NOTEQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 29 (logic_expression -> expression NOTEQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! +               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! -               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! *               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! ^               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]


state 68

    (30) logic_expression -> expression GOEQUAL expression .
    (22) expression -> expression GOEQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 30 (logic_expression -> expression GOEQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! GT              [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! +               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! -               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! *               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! /               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! ^               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]


state 69

    (31) logic_expression -> expression LOEQUAL expression .
    (23) expression -> expression LOEQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 31 (logic_expression -> expression LOEQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! +               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! -               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! *               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! /               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! ^               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]


state 70

    (32) logic_expression -> expression AND expression .
    (24) expression -> expression AND expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 32 (logic_expression -> expression AND expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! GOEQUAL         [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! LOEQUAL         [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! +               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! -               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! *               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! /               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! ^               [ reduce using rule 24 (expression -> expression AND expression .) ]


state 71

    (33) logic_expression -> expression OR expression .
    (25) expression -> expression OR expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    )               reduce using rule 33 (logic_expression -> expression OR expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! GOEQUAL         [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! LOEQUAL         [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! +               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! -               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! *               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! ^               [ reduce using rule 25 (expression -> expression OR expression .) ]


state 72

    (13) expression -> expression + expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    LT              reduce using rule 13 (expression -> expression + expression .)
    GT              reduce using rule 13 (expression -> expression + expression .)
    EQUAL           reduce using rule 13 (expression -> expression + expression .)
    NOTEQUAL        reduce using rule 13 (expression -> expression + expression .)
    GOEQUAL         reduce using rule 13 (expression -> expression + expression .)
    LOEQUAL         reduce using rule 13 (expression -> expression + expression .)
    AND             reduce using rule 13 (expression -> expression + expression .)
    OR              reduce using rule 13 (expression -> expression + expression .)
    +               reduce using rule 13 (expression -> expression + expression .)
    -               reduce using rule 13 (expression -> expression + expression .)
    ^               reduce using rule 13 (expression -> expression + expression .)
    IF              reduce using rule 13 (expression -> expression + expression .)
    BOOLEAN         reduce using rule 13 (expression -> expression + expression .)
    STRING          reduce using rule 13 (expression -> expression + expression .)
    INTDEC          reduce using rule 13 (expression -> expression + expression .)
    FLOATDEC        reduce using rule 13 (expression -> expression + expression .)
    PRINT           reduce using rule 13 (expression -> expression + expression .)
    NAME            reduce using rule 13 (expression -> expression + expression .)
    $end            reduce using rule 13 (expression -> expression + expression .)
    }               reduce using rule 13 (expression -> expression + expression .)
    )               reduce using rule 13 (expression -> expression + expression .)
    *               shift and go to state 48
    /               shift and go to state 49

  ! *               [ reduce using rule 13 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 13 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! ^               [ shift and go to state 50 ]
  ! LT              [ shift and go to state 53 ]
  ! GT              [ shift and go to state 54 ]
  ! EQUAL           [ shift and go to state 55 ]
  ! NOTEQUAL        [ shift and go to state 56 ]
  ! GOEQUAL         [ shift and go to state 57 ]
  ! LOEQUAL         [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 60 ]


state 73

    (14) expression -> expression - expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    LT              reduce using rule 14 (expression -> expression - expression .)
    GT              reduce using rule 14 (expression -> expression - expression .)
    EQUAL           reduce using rule 14 (expression -> expression - expression .)
    NOTEQUAL        reduce using rule 14 (expression -> expression - expression .)
    GOEQUAL         reduce using rule 14 (expression -> expression - expression .)
    LOEQUAL         reduce using rule 14 (expression -> expression - expression .)
    AND             reduce using rule 14 (expression -> expression - expression .)
    OR              reduce using rule 14 (expression -> expression - expression .)
    +               reduce using rule 14 (expression -> expression - expression .)
    -               reduce using rule 14 (expression -> expression - expression .)
    ^               reduce using rule 14 (expression -> expression - expression .)
    IF              reduce using rule 14 (expression -> expression - expression .)
    BOOLEAN         reduce using rule 14 (expression -> expression - expression .)
    STRING          reduce using rule 14 (expression -> expression - expression .)
    INTDEC          reduce using rule 14 (expression -> expression - expression .)
    FLOATDEC        reduce using rule 14 (expression -> expression - expression .)
    PRINT           reduce using rule 14 (expression -> expression - expression .)
    NAME            reduce using rule 14 (expression -> expression - expression .)
    $end            reduce using rule 14 (expression -> expression - expression .)
    }               reduce using rule 14 (expression -> expression - expression .)
    )               reduce using rule 14 (expression -> expression - expression .)
    *               shift and go to state 48
    /               shift and go to state 49

  ! *               [ reduce using rule 14 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 14 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! ^               [ shift and go to state 50 ]
  ! LT              [ shift and go to state 53 ]
  ! GT              [ shift and go to state 54 ]
  ! EQUAL           [ shift and go to state 55 ]
  ! NOTEQUAL        [ shift and go to state 56 ]
  ! GOEQUAL         [ shift and go to state 57 ]
  ! LOEQUAL         [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 60 ]


state 74

    (15) expression -> expression * expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    LT              reduce using rule 15 (expression -> expression * expression .)
    GT              reduce using rule 15 (expression -> expression * expression .)
    EQUAL           reduce using rule 15 (expression -> expression * expression .)
    NOTEQUAL        reduce using rule 15 (expression -> expression * expression .)
    GOEQUAL         reduce using rule 15 (expression -> expression * expression .)
    LOEQUAL         reduce using rule 15 (expression -> expression * expression .)
    AND             reduce using rule 15 (expression -> expression * expression .)
    OR              reduce using rule 15 (expression -> expression * expression .)
    +               reduce using rule 15 (expression -> expression * expression .)
    -               reduce using rule 15 (expression -> expression * expression .)
    *               reduce using rule 15 (expression -> expression * expression .)
    /               reduce using rule 15 (expression -> expression * expression .)
    ^               reduce using rule 15 (expression -> expression * expression .)
    IF              reduce using rule 15 (expression -> expression * expression .)
    BOOLEAN         reduce using rule 15 (expression -> expression * expression .)
    STRING          reduce using rule 15 (expression -> expression * expression .)
    INTDEC          reduce using rule 15 (expression -> expression * expression .)
    FLOATDEC        reduce using rule 15 (expression -> expression * expression .)
    PRINT           reduce using rule 15 (expression -> expression * expression .)
    NAME            reduce using rule 15 (expression -> expression * expression .)
    $end            reduce using rule 15 (expression -> expression * expression .)
    }               reduce using rule 15 (expression -> expression * expression .)
    )               reduce using rule 15 (expression -> expression * expression .)

  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! ^               [ shift and go to state 50 ]
  ! LT              [ shift and go to state 53 ]
  ! GT              [ shift and go to state 54 ]
  ! EQUAL           [ shift and go to state 55 ]
  ! NOTEQUAL        [ shift and go to state 56 ]
  ! GOEQUAL         [ shift and go to state 57 ]
  ! LOEQUAL         [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 60 ]


state 75

    (16) expression -> expression / expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

    LT              reduce using rule 16 (expression -> expression / expression .)
    GT              reduce using rule 16 (expression -> expression / expression .)
    EQUAL           reduce using rule 16 (expression -> expression / expression .)
    NOTEQUAL        reduce using rule 16 (expression -> expression / expression .)
    GOEQUAL         reduce using rule 16 (expression -> expression / expression .)
    LOEQUAL         reduce using rule 16 (expression -> expression / expression .)
    AND             reduce using rule 16 (expression -> expression / expression .)
    OR              reduce using rule 16 (expression -> expression / expression .)
    +               reduce using rule 16 (expression -> expression / expression .)
    -               reduce using rule 16 (expression -> expression / expression .)
    *               reduce using rule 16 (expression -> expression / expression .)
    /               reduce using rule 16 (expression -> expression / expression .)
    ^               reduce using rule 16 (expression -> expression / expression .)
    IF              reduce using rule 16 (expression -> expression / expression .)
    BOOLEAN         reduce using rule 16 (expression -> expression / expression .)
    STRING          reduce using rule 16 (expression -> expression / expression .)
    INTDEC          reduce using rule 16 (expression -> expression / expression .)
    FLOATDEC        reduce using rule 16 (expression -> expression / expression .)
    PRINT           reduce using rule 16 (expression -> expression / expression .)
    NAME            reduce using rule 16 (expression -> expression / expression .)
    $end            reduce using rule 16 (expression -> expression / expression .)
    }               reduce using rule 16 (expression -> expression / expression .)
    )               reduce using rule 16 (expression -> expression / expression .)

  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! ^               [ shift and go to state 50 ]
  ! LT              [ shift and go to state 53 ]
  ! GT              [ shift and go to state 54 ]
  ! EQUAL           [ shift and go to state 55 ]
  ! NOTEQUAL        [ shift and go to state 56 ]
  ! GOEQUAL         [ shift and go to state 57 ]
  ! LOEQUAL         [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 60 ]


state 76

    (17) expression -> expression ^ expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 17 (expression -> expression ^ expression .)
    BOOLEAN         reduce using rule 17 (expression -> expression ^ expression .)
    STRING          reduce using rule 17 (expression -> expression ^ expression .)
    INTDEC          reduce using rule 17 (expression -> expression ^ expression .)
    FLOATDEC        reduce using rule 17 (expression -> expression ^ expression .)
    PRINT           reduce using rule 17 (expression -> expression ^ expression .)
    NAME            reduce using rule 17 (expression -> expression ^ expression .)
    $end            reduce using rule 17 (expression -> expression ^ expression .)
    }               reduce using rule 17 (expression -> expression ^ expression .)
    )               reduce using rule 17 (expression -> expression ^ expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! LT              [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! EQUAL           [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! NOTEQUAL        [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! GOEQUAL         [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! LOEQUAL         [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! +               [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 17 (expression -> expression ^ expression .) ]


state 77

    (18) expression -> expression LT expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 18 (expression -> expression LT expression .)
    BOOLEAN         reduce using rule 18 (expression -> expression LT expression .)
    STRING          reduce using rule 18 (expression -> expression LT expression .)
    INTDEC          reduce using rule 18 (expression -> expression LT expression .)
    FLOATDEC        reduce using rule 18 (expression -> expression LT expression .)
    PRINT           reduce using rule 18 (expression -> expression LT expression .)
    NAME            reduce using rule 18 (expression -> expression LT expression .)
    $end            reduce using rule 18 (expression -> expression LT expression .)
    }               reduce using rule 18 (expression -> expression LT expression .)
    )               reduce using rule 18 (expression -> expression LT expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! ^               [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! EQUAL           [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! NOTEQUAL        [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! GOEQUAL         [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! LOEQUAL         [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression LT expression .) ]


state 78

    (19) expression -> expression GT expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 19 (expression -> expression GT expression .)
    BOOLEAN         reduce using rule 19 (expression -> expression GT expression .)
    STRING          reduce using rule 19 (expression -> expression GT expression .)
    INTDEC          reduce using rule 19 (expression -> expression GT expression .)
    FLOATDEC        reduce using rule 19 (expression -> expression GT expression .)
    PRINT           reduce using rule 19 (expression -> expression GT expression .)
    NAME            reduce using rule 19 (expression -> expression GT expression .)
    $end            reduce using rule 19 (expression -> expression GT expression .)
    }               reduce using rule 19 (expression -> expression GT expression .)
    )               reduce using rule 19 (expression -> expression GT expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! ^               [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! EQUAL           [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! NOTEQUAL        [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! GOEQUAL         [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! LOEQUAL         [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression GT expression .) ]


state 79

    (20) expression -> expression EQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 20 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 20 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 20 (expression -> expression EQUAL expression .)
    INTDEC          reduce using rule 20 (expression -> expression EQUAL expression .)
    FLOATDEC        reduce using rule 20 (expression -> expression EQUAL expression .)
    PRINT           reduce using rule 20 (expression -> expression EQUAL expression .)
    NAME            reduce using rule 20 (expression -> expression EQUAL expression .)
    $end            reduce using rule 20 (expression -> expression EQUAL expression .)
    }               reduce using rule 20 (expression -> expression EQUAL expression .)
    )               reduce using rule 20 (expression -> expression EQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! -               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! *               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! /               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! ^               [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression EQUAL expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression EQUAL expression .) ]


state 80

    (21) expression -> expression NOTEQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    BOOLEAN         reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    STRING          reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    INTDEC          reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    FLOATDEC        reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    }               reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    )               reduce using rule 21 (expression -> expression NOTEQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! -               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! *               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! ^               [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! LT              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]


state 81

    (22) expression -> expression GOEQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 22 (expression -> expression GOEQUAL expression .)
    BOOLEAN         reduce using rule 22 (expression -> expression GOEQUAL expression .)
    STRING          reduce using rule 22 (expression -> expression GOEQUAL expression .)
    INTDEC          reduce using rule 22 (expression -> expression GOEQUAL expression .)
    FLOATDEC        reduce using rule 22 (expression -> expression GOEQUAL expression .)
    PRINT           reduce using rule 22 (expression -> expression GOEQUAL expression .)
    NAME            reduce using rule 22 (expression -> expression GOEQUAL expression .)
    $end            reduce using rule 22 (expression -> expression GOEQUAL expression .)
    }               reduce using rule 22 (expression -> expression GOEQUAL expression .)
    )               reduce using rule 22 (expression -> expression GOEQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! -               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! *               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! /               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! ^               [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! LT              [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! GT              [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression GOEQUAL expression .) ]


state 82

    (23) expression -> expression LOEQUAL expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 23 (expression -> expression LOEQUAL expression .)
    BOOLEAN         reduce using rule 23 (expression -> expression LOEQUAL expression .)
    STRING          reduce using rule 23 (expression -> expression LOEQUAL expression .)
    INTDEC          reduce using rule 23 (expression -> expression LOEQUAL expression .)
    FLOATDEC        reduce using rule 23 (expression -> expression LOEQUAL expression .)
    PRINT           reduce using rule 23 (expression -> expression LOEQUAL expression .)
    NAME            reduce using rule 23 (expression -> expression LOEQUAL expression .)
    $end            reduce using rule 23 (expression -> expression LOEQUAL expression .)
    }               reduce using rule 23 (expression -> expression LOEQUAL expression .)
    )               reduce using rule 23 (expression -> expression LOEQUAL expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! -               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! *               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! /               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! ^               [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! GOEQUAL         [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! LOEQUAL         [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression LOEQUAL expression .) ]


state 83

    (24) expression -> expression AND expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 24 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 24 (expression -> expression AND expression .)
    STRING          reduce using rule 24 (expression -> expression AND expression .)
    INTDEC          reduce using rule 24 (expression -> expression AND expression .)
    FLOATDEC        reduce using rule 24 (expression -> expression AND expression .)
    PRINT           reduce using rule 24 (expression -> expression AND expression .)
    NAME            reduce using rule 24 (expression -> expression AND expression .)
    $end            reduce using rule 24 (expression -> expression AND expression .)
    }               reduce using rule 24 (expression -> expression AND expression .)
    )               reduce using rule 24 (expression -> expression AND expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! -               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! *               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! /               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! ^               [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! GOEQUAL         [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! LOEQUAL         [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression AND expression .) ]


state 84

    (25) expression -> expression OR expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (17) expression -> expression . ^ expression
    (18) expression -> expression . LT expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . EQUAL expression
    (21) expression -> expression . NOTEQUAL expression
    (22) expression -> expression . GOEQUAL expression
    (23) expression -> expression . LOEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GOEQUAL resolved as shift
  ! shift/reduce conflict for LOEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 25 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 25 (expression -> expression OR expression .)
    STRING          reduce using rule 25 (expression -> expression OR expression .)
    INTDEC          reduce using rule 25 (expression -> expression OR expression .)
    FLOATDEC        reduce using rule 25 (expression -> expression OR expression .)
    PRINT           reduce using rule 25 (expression -> expression OR expression .)
    NAME            reduce using rule 25 (expression -> expression OR expression .)
    $end            reduce using rule 25 (expression -> expression OR expression .)
    }               reduce using rule 25 (expression -> expression OR expression .)
    )               reduce using rule 25 (expression -> expression OR expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    ^               shift and go to state 50
    LT              shift and go to state 53
    GT              shift and go to state 54
    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GOEQUAL         shift and go to state 57
    LOEQUAL         shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60

  ! +               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! -               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! *               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! ^               [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! GOEQUAL         [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! LOEQUAL         [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 25 (expression -> expression OR expression .) ]


state 85

    (41) conditional -> IF ( logic_expression ) { s . } elif else

    }               shift and go to state 86


state 86

    (41) conditional -> IF ( logic_expression ) { s } . elif else
    (42) elif -> . ELIF ( logic_expression ) { s } else
    (43) elif -> .

    ELIF            shift and go to state 88
    ELSE            reduce using rule 43 (elif -> .)
    IF              reduce using rule 43 (elif -> .)
    BOOLEAN         reduce using rule 43 (elif -> .)
    STRING          reduce using rule 43 (elif -> .)
    INTDEC          reduce using rule 43 (elif -> .)
    FLOATDEC        reduce using rule 43 (elif -> .)
    PRINT           reduce using rule 43 (elif -> .)
    NAME            reduce using rule 43 (elif -> .)
    $end            reduce using rule 43 (elif -> .)
    }               reduce using rule 43 (elif -> .)

    elif                           shift and go to state 87

state 87

    (41) conditional -> IF ( logic_expression ) { s } elif . else
    (44) else -> . ELSE { s }
    (45) else -> .

    ELSE            shift and go to state 90
    IF              reduce using rule 45 (else -> .)
    BOOLEAN         reduce using rule 45 (else -> .)
    STRING          reduce using rule 45 (else -> .)
    INTDEC          reduce using rule 45 (else -> .)
    FLOATDEC        reduce using rule 45 (else -> .)
    PRINT           reduce using rule 45 (else -> .)
    NAME            reduce using rule 45 (else -> .)
    $end            reduce using rule 45 (else -> .)
    }               reduce using rule 45 (else -> .)

    else                           shift and go to state 89

state 88

    (42) elif -> ELIF . ( logic_expression ) { s } else

    (               shift and go to state 91


state 89

    (41) conditional -> IF ( logic_expression ) { s } elif else .

    IF              reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    BOOLEAN         reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    STRING          reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    INTDEC          reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    FLOATDEC        reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    PRINT           reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    NAME            reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    $end            reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)
    }               reduce using rule 41 (conditional -> IF ( logic_expression ) { s } elif else .)


state 90

    (44) else -> ELSE . { s }

    {               shift and go to state 92


state 91

    (42) elif -> ELIF ( . logic_expression ) { s } else
    (26) logic_expression -> . expression LT expression
    (27) logic_expression -> . expression GT expression
    (28) logic_expression -> . expression EQUAL expression
    (29) logic_expression -> . expression NOTEQUAL expression
    (30) logic_expression -> . expression GOEQUAL expression
    (31) logic_expression -> . expression LOEQUAL expression
    (32) logic_expression -> . expression AND expression
    (33) logic_expression -> . expression OR expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (17) expression -> . expression ^ expression
    (18) expression -> . expression LT expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression EQUAL expression
    (21) expression -> . expression NOTEQUAL expression
    (22) expression -> . expression GOEQUAL expression
    (23) expression -> . expression LOEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (34) expression -> . - expression
    (35) expression -> . ( expression )
    (36) expression -> . INUMBER
    (37) expression -> . FNUMBER
    (38) expression -> . BOOLEAN
    (39) expression -> . STRING
    (40) expression -> . NAME

    -               shift and go to state 23
    (               shift and go to state 20
    INUMBER         shift and go to state 24
    FNUMBER         shift and go to state 25
    BOOLEAN         shift and go to state 26
    STRING          shift and go to state 27
    NAME            shift and go to state 28

    logic_expression               shift and go to state 93
    expression                     shift and go to state 22

state 92

    (44) else -> ELSE { . s }
    (1) s -> . segment
    (2) s -> . segment s
    (3) segment -> . conditional
    (4) segment -> . statement
    (41) conditional -> . IF ( logic_expression ) { s } elif else
    (5) statement -> . BOOLEAN NAME is_assign
    (6) statement -> . STRING NAME is_assign
    (7) statement -> . INTDEC NAME is_assign
    (8) statement -> . FLOATDEC NAME is_assign
    (11) statement -> . PRINT ( expression )
    (12) statement -> . NAME = expression

    IF              shift and go to state 5
    BOOLEAN         shift and go to state 6
    STRING          shift and go to state 8
    INTDEC          shift and go to state 9
    FLOATDEC        shift and go to state 10
    PRINT           shift and go to state 11
    NAME            shift and go to state 7

    s                              shift and go to state 94
    segment                        shift and go to state 2
    conditional                    shift and go to state 3
    statement                      shift and go to state 4

state 93

    (42) elif -> ELIF ( logic_expression . ) { s } else

    )               shift and go to state 95


state 94

    (44) else -> ELSE { s . }

    }               shift and go to state 96


state 95

    (42) elif -> ELIF ( logic_expression ) . { s } else

    {               shift and go to state 97


state 96

    (44) else -> ELSE { s } .

    IF              reduce using rule 44 (else -> ELSE { s } .)
    BOOLEAN         reduce using rule 44 (else -> ELSE { s } .)
    STRING          reduce using rule 44 (else -> ELSE { s } .)
    INTDEC          reduce using rule 44 (else -> ELSE { s } .)
    FLOATDEC        reduce using rule 44 (else -> ELSE { s } .)
    PRINT           reduce using rule 44 (else -> ELSE { s } .)
    NAME            reduce using rule 44 (else -> ELSE { s } .)
    $end            reduce using rule 44 (else -> ELSE { s } .)
    }               reduce using rule 44 (else -> ELSE { s } .)
    ELSE            reduce using rule 44 (else -> ELSE { s } .)


state 97

    (42) elif -> ELIF ( logic_expression ) { . s } else
    (1) s -> . segment
    (2) s -> . segment s
    (3) segment -> . conditional
    (4) segment -> . statement
    (41) conditional -> . IF ( logic_expression ) { s } elif else
    (5) statement -> . BOOLEAN NAME is_assign
    (6) statement -> . STRING NAME is_assign
    (7) statement -> . INTDEC NAME is_assign
    (8) statement -> . FLOATDEC NAME is_assign
    (11) statement -> . PRINT ( expression )
    (12) statement -> . NAME = expression

    IF              shift and go to state 5
    BOOLEAN         shift and go to state 6
    STRING          shift and go to state 8
    INTDEC          shift and go to state 9
    FLOATDEC        shift and go to state 10
    PRINT           shift and go to state 11
    NAME            shift and go to state 7

    s                              shift and go to state 98
    segment                        shift and go to state 2
    conditional                    shift and go to state 3
    statement                      shift and go to state 4

state 98

    (42) elif -> ELIF ( logic_expression ) { s . } else

    }               shift and go to state 99


state 99

    (42) elif -> ELIF ( logic_expression ) { s } . else
    (44) else -> . ELSE { s }
    (45) else -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 90
    IF              reduce using rule 45 (else -> .)
    BOOLEAN         reduce using rule 45 (else -> .)
    STRING          reduce using rule 45 (else -> .)
    INTDEC          reduce using rule 45 (else -> .)
    FLOATDEC        reduce using rule 45 (else -> .)
    PRINT           reduce using rule 45 (else -> .)
    NAME            reduce using rule 45 (else -> .)
    $end            reduce using rule 45 (else -> .)
    }               reduce using rule 45 (else -> .)

  ! ELSE            [ reduce using rule 45 (else -> .) ]

    else                           shift and go to state 100

state 100

    (42) elif -> ELIF ( logic_expression ) { s } else .

    ELSE            reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    IF              reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    BOOLEAN         reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    STRING          reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    INTDEC          reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    FLOATDEC        reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    PRINT           reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    NAME            reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    $end            reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)
    }               reduce using rule 42 (elif -> ELIF ( logic_expression ) { s } else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 64 resolved as shift
WARNING: shift/reduce conflict for - in state 64 resolved as shift
WARNING: shift/reduce conflict for * in state 64 resolved as shift
WARNING: shift/reduce conflict for / in state 64 resolved as shift
WARNING: shift/reduce conflict for ^ in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for + in state 65 resolved as shift
WARNING: shift/reduce conflict for - in state 65 resolved as shift
WARNING: shift/reduce conflict for * in state 65 resolved as shift
WARNING: shift/reduce conflict for / in state 65 resolved as shift
WARNING: shift/reduce conflict for ^ in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for + in state 66 resolved as shift
WARNING: shift/reduce conflict for - in state 66 resolved as shift
WARNING: shift/reduce conflict for * in state 66 resolved as shift
WARNING: shift/reduce conflict for / in state 66 resolved as shift
WARNING: shift/reduce conflict for ^ in state 66 resolved as shift
WARNING: shift/reduce conflict for LT in state 66 resolved as shift
WARNING: shift/reduce conflict for GT in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for + in state 67 resolved as shift
WARNING: shift/reduce conflict for - in state 67 resolved as shift
WARNING: shift/reduce conflict for * in state 67 resolved as shift
WARNING: shift/reduce conflict for / in state 67 resolved as shift
WARNING: shift/reduce conflict for ^ in state 67 resolved as shift
WARNING: shift/reduce conflict for LT in state 67 resolved as shift
WARNING: shift/reduce conflict for GT in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for + in state 68 resolved as shift
WARNING: shift/reduce conflict for - in state 68 resolved as shift
WARNING: shift/reduce conflict for * in state 68 resolved as shift
WARNING: shift/reduce conflict for / in state 68 resolved as shift
WARNING: shift/reduce conflict for ^ in state 68 resolved as shift
WARNING: shift/reduce conflict for LT in state 68 resolved as shift
WARNING: shift/reduce conflict for GT in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for + in state 69 resolved as shift
WARNING: shift/reduce conflict for - in state 69 resolved as shift
WARNING: shift/reduce conflict for * in state 69 resolved as shift
WARNING: shift/reduce conflict for / in state 69 resolved as shift
WARNING: shift/reduce conflict for ^ in state 69 resolved as shift
WARNING: shift/reduce conflict for LT in state 69 resolved as shift
WARNING: shift/reduce conflict for GT in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for + in state 70 resolved as shift
WARNING: shift/reduce conflict for - in state 70 resolved as shift
WARNING: shift/reduce conflict for * in state 70 resolved as shift
WARNING: shift/reduce conflict for / in state 70 resolved as shift
WARNING: shift/reduce conflict for ^ in state 70 resolved as shift
WARNING: shift/reduce conflict for LT in state 70 resolved as shift
WARNING: shift/reduce conflict for GT in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for + in state 71 resolved as shift
WARNING: shift/reduce conflict for - in state 71 resolved as shift
WARNING: shift/reduce conflict for * in state 71 resolved as shift
WARNING: shift/reduce conflict for / in state 71 resolved as shift
WARNING: shift/reduce conflict for ^ in state 71 resolved as shift
WARNING: shift/reduce conflict for LT in state 71 resolved as shift
WARNING: shift/reduce conflict for GT in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for + in state 76 resolved as shift
WARNING: shift/reduce conflict for - in state 76 resolved as shift
WARNING: shift/reduce conflict for * in state 76 resolved as shift
WARNING: shift/reduce conflict for / in state 76 resolved as shift
WARNING: shift/reduce conflict for ^ in state 76 resolved as shift
WARNING: shift/reduce conflict for LT in state 76 resolved as shift
WARNING: shift/reduce conflict for GT in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for + in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 77 resolved as shift
WARNING: shift/reduce conflict for * in state 77 resolved as shift
WARNING: shift/reduce conflict for / in state 77 resolved as shift
WARNING: shift/reduce conflict for ^ in state 77 resolved as shift
WARNING: shift/reduce conflict for LT in state 77 resolved as shift
WARNING: shift/reduce conflict for GT in state 77 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for + in state 78 resolved as shift
WARNING: shift/reduce conflict for - in state 78 resolved as shift
WARNING: shift/reduce conflict for * in state 78 resolved as shift
WARNING: shift/reduce conflict for / in state 78 resolved as shift
WARNING: shift/reduce conflict for ^ in state 78 resolved as shift
WARNING: shift/reduce conflict for LT in state 78 resolved as shift
WARNING: shift/reduce conflict for GT in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for + in state 79 resolved as shift
WARNING: shift/reduce conflict for - in state 79 resolved as shift
WARNING: shift/reduce conflict for * in state 79 resolved as shift
WARNING: shift/reduce conflict for / in state 79 resolved as shift
WARNING: shift/reduce conflict for ^ in state 79 resolved as shift
WARNING: shift/reduce conflict for LT in state 79 resolved as shift
WARNING: shift/reduce conflict for GT in state 79 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for + in state 80 resolved as shift
WARNING: shift/reduce conflict for - in state 80 resolved as shift
WARNING: shift/reduce conflict for * in state 80 resolved as shift
WARNING: shift/reduce conflict for / in state 80 resolved as shift
WARNING: shift/reduce conflict for ^ in state 80 resolved as shift
WARNING: shift/reduce conflict for LT in state 80 resolved as shift
WARNING: shift/reduce conflict for GT in state 80 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for + in state 81 resolved as shift
WARNING: shift/reduce conflict for - in state 81 resolved as shift
WARNING: shift/reduce conflict for * in state 81 resolved as shift
WARNING: shift/reduce conflict for / in state 81 resolved as shift
WARNING: shift/reduce conflict for ^ in state 81 resolved as shift
WARNING: shift/reduce conflict for LT in state 81 resolved as shift
WARNING: shift/reduce conflict for GT in state 81 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for + in state 82 resolved as shift
WARNING: shift/reduce conflict for - in state 82 resolved as shift
WARNING: shift/reduce conflict for * in state 82 resolved as shift
WARNING: shift/reduce conflict for / in state 82 resolved as shift
WARNING: shift/reduce conflict for ^ in state 82 resolved as shift
WARNING: shift/reduce conflict for LT in state 82 resolved as shift
WARNING: shift/reduce conflict for GT in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for + in state 83 resolved as shift
WARNING: shift/reduce conflict for - in state 83 resolved as shift
WARNING: shift/reduce conflict for * in state 83 resolved as shift
WARNING: shift/reduce conflict for / in state 83 resolved as shift
WARNING: shift/reduce conflict for ^ in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for + in state 84 resolved as shift
WARNING: shift/reduce conflict for - in state 84 resolved as shift
WARNING: shift/reduce conflict for * in state 84 resolved as shift
WARNING: shift/reduce conflict for / in state 84 resolved as shift
WARNING: shift/reduce conflict for ^ in state 84 resolved as shift
WARNING: shift/reduce conflict for LT in state 84 resolved as shift
WARNING: shift/reduce conflict for GT in state 84 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for GOEQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for LOEQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 99 resolved as shift
